// all latest versions as of 2022-04-27
buildscript {
    ext {
        ktor_version = '3.0.1'
        logback_version = '1.5.12'
        testcontainers_version = '1.20.3'
    }
}

plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version "0.51.0"
    id 'maven-publish'
    id 'signing'
    id 'org.hibernate.build.maven-repo-auth' version '3.0.4'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
}

group 'io.newm'
version '3.0.0'

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.flywaydb:flyway-core:10.20.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.21"
    runtimeOnly "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "org.testcontainers:postgresql:$testcontainers_version"
    testImplementation "org.testcontainers:testcontainers:$testcontainers_version"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainers_version"
    testImplementation "com.zaxxer:HikariCP:6.0.0"
    testImplementation "org.postgresql:postgresql:42.7.4"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.11.3"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.11.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.11.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "21"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "21"
}

jar {
    archiveBaseName = "ktor-flyway-feature"
    archiveVersion = "3.0.0"
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    archiveClassifier  = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name = "ossrh"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact(sourcesJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            pom {
                groupId = 'io.newm'
                artifactId = 'ktor-flyway-feature'

                from components.kotlin

                name = 'Ktor Flyway feature'
                description = 'Ktor flyway feature'
                url = 'https://github.com/projectNEWM/ktor-flyway-feature'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://raw.githubusercontent.com/projectNEWM/ktor-flyway-feature/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'viartemev'
                        name = 'Vyacheslav Artemyev'
                        email = 'viartemev@gmail.com'
                    }
                    developer {
                        id = 'AndrewWestberg'
                        name = 'Andrew Westberg'
                        email = 'andrewwestberg@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/projectNEWM/ktor-flyway-feature.git'
                    developerConnection = 'scm:git:ssh://github.com/projectNEWM/ktor-flyway-feature.git'
                    url = 'https://github.com/projectNEWM/ktor-flyway-feature'
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

model {
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.withType(Sign)
    }
    tasks.publishMavenJavaPublicationToOssrhRepository {
        dependsOn project.tasks.withType(Sign)
    }
}